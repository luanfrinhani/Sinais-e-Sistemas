# -*- coding: utf-8 -*-
"""Exercicio01_FT_Sinais_LuanSilvaFrinhani.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zMD2O6pMETdG7FSKF15O_pgdRywdPOPG
"""



import numpy as np
import matplotlib.pyplot as plt
from numpy import pi
from numpy.fft import fft, ifft, fftfreq, fftshift
#Função para a criação de um sinal de rampa.
def rampa(t,d,tam):
  x = np.arange(-10,tam+10,tam)
  j = 0
  for i in range(len(t)):
    if (x[i]<d):
      x[i] = 0
    else:
      x[i] = j
      j = j + tam
  return x

#Letra A
#Inicializando os valores
wam = 1000
Tam = (2*pi)/wam
t = np.arange(-10,Tam+10,Tam)
#A função x que é o sinal modulante
x = (0.2*(rampa(t,-5,Tam) - 2*rampa(t,0,Tam) + rampa(t,5,Tam)))


N = 2**16

#Fazendo a fft
Xf = (Tam*N)*fft(x,N)/N

w = fftfreq(len(Xf), d=(Tam))*(2*pi)


wd = fftshift(w)
Xd = fftshift(Xf)

ModX = np.abs(Xd)

#Plotando o gráfico do domínio da frequência
fig, ax1 = plt.subplots()
ax1.plot(wd, ModX,'r-')
ax1.set_ylabel("Amplitude")
ax1.set_xlabel("frequencia [rad/s]")
ax1.grid()
ax1.set_xlim(-40, 40)
ax1.set_title('|X(e^jw)|')

#Plotando o gráfico do sinal no tempo
fig1, ax = plt.subplots()
ax.plot(t, x)
ax.set_ylabel("Amplitude x(t)")
ax.set_xlabel("tempo [s]")
ax.grid()
ax.set_title('x(t)')


#Letra B

#Inicializando os valores
wam = 3000 
Tam = (2*pi)/wam
t1 = np.arange(-20,Tam+20,Tam)

#Criando o sinal y(t1)
y = np.cos(10*t1)

N = 2**12

#Fazendo a fft
X = (Tam*N)*fft(y,N)/N


w = fftfreq(len(X), d=(Tam))*(2*pi)

wd = fftshift(w)
Xd = fftshift(X)

ModX = np.abs(Xd)

#Plotando o gráfico do domínio da frequência
fig, ax1 = plt.subplots()
ax1.plot(wd, ModX, 'r-')
ax1.set_ylabel("Amplitude")
ax1.set_xlabel("frequencia [rad/s]")
ax1.grid()
ax1.set_xlim(-40, 40)
ax1.set_title('|X(e^jw)|')

#Plotando o gráfico do sinal no tempo
fig1, ax = plt.subplots()
ax.plot(t1, y)
ax.set_ylabel("Amplitude de y(t)")
ax.set_xlabel("tempo [s]")
ax.grid()
ax.set_xlim(0,10)
ax.set_title('y(t)')



